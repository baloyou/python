Help on module aiohttp.web in aiohttp:

NNAAMMEE
    aiohttp.web

CCLLAASSSSEESS
    abc.ABC(builtins.object)
        aiohttp.web_urldispatcher.AbstractRoute
            aiohttp.web_urldispatcher.ResourceRoute
    aiohttp.abc.AbstractMatchInfo(abc.ABC)
        aiohttp.web_urldispatcher.UrlMappingMatchInfo(builtins.dict, aiohttp.abc.AbstractMatchInfo)
    aiohttp.abc.AbstractRouter(abc.ABC)
        aiohttp.web_urldispatcher.UrlDispatcher(aiohttp.abc.AbstractRouter, collections.abc.Mapping)
    aiohttp.abc.AbstractView(abc.ABC)
        aiohttp.web_urldispatcher.View
    aiohttp.helpers.HeadersMixin(builtins.object)
        aiohttp.web_request.BaseRequest(collections.abc.MutableMapping, aiohttp.helpers.HeadersMixin)
            aiohttp.web_request.Request
        aiohttp.web_response.StreamResponse
            aiohttp.web_fileresponse.FileResponse
            aiohttp.web_response.Response
                aiohttp.web_exceptions.HTTPException(aiohttp.web_response.Response, builtins.Exception)
                    aiohttp.web_exceptions.HTTPError
                        aiohttp.web_exceptions.HTTPClientError
                            aiohttp.web_exceptions.HTTPBadRequest
                            aiohttp.web_exceptions.HTTPConflict
                            aiohttp.web_exceptions.HTTPExpectationFailed
                            aiohttp.web_exceptions.HTTPFailedDependency
                            aiohttp.web_exceptions.HTTPForbidden
                            aiohttp.web_exceptions.HTTPGone
                            aiohttp.web_exceptions.HTTPLengthRequired
                            aiohttp.web_exceptions.HTTPMethodNotAllowed
                            aiohttp.web_exceptions.HTTPMisdirectedRequest
                            aiohttp.web_exceptions.HTTPNotAcceptable
                            aiohttp.web_exceptions.HTTPNotFound
                            aiohttp.web_exceptions.HTTPPaymentRequired
                            aiohttp.web_exceptions.HTTPPreconditionFailed
                            aiohttp.web_exceptions.HTTPPreconditionRequired
                            aiohttp.web_exceptions.HTTPProxyAuthenticationRequired
                            aiohttp.web_exceptions.HTTPRequestEntityTooLarge
                            aiohttp.web_exceptions.HTTPRequestHeaderFieldsTooLarge
                            aiohttp.web_exceptions.HTTPRequestRangeNotSatisfiable
                            aiohttp.web_exceptions.HTTPRequestTimeout
                            aiohttp.web_exceptions.HTTPRequestURITooLong
                            aiohttp.web_exceptions.HTTPTooManyRequests
                            aiohttp.web_exceptions.HTTPUnauthorized
                            aiohttp.web_exceptions.HTTPUnavailableForLegalReasons
                            aiohttp.web_exceptions.HTTPUnprocessableEntity
                            aiohttp.web_exceptions.HTTPUnsupportedMediaType
                            aiohttp.web_exceptions.HTTPUpgradeRequired
                        aiohttp.web_exceptions.HTTPServerError
                            aiohttp.web_exceptions.HTTPBadGateway
                            aiohttp.web_exceptions.HTTPGatewayTimeout
                            aiohttp.web_exceptions.HTTPInsufficientStorage
                            aiohttp.web_exceptions.HTTPInternalServerError
                            aiohttp.web_exceptions.HTTPNetworkAuthenticationRequired
                            aiohttp.web_exceptions.HTTPNotExtended
                            aiohttp.web_exceptions.HTTPNotImplemented
                            aiohttp.web_exceptions.HTTPServiceUnavailable
                            aiohttp.web_exceptions.HTTPVariantAlsoNegotiates
                            aiohttp.web_exceptions.HTTPVersionNotSupported
                    aiohttp.web_exceptions.HTTPRedirection
                        aiohttp.web_exceptions.HTTPNotModified
                    aiohttp.web_exceptions.HTTPSuccessful
                        aiohttp.web_exceptions.HTTPAccepted
                        aiohttp.web_exceptions.HTTPCreated
                        aiohttp.web_exceptions.HTTPNoContent
                        aiohttp.web_exceptions.HTTPNonAuthoritativeInformation
                        aiohttp.web_exceptions.HTTPOk
                        aiohttp.web_exceptions.HTTPPartialContent
                        aiohttp.web_exceptions.HTTPResetContent
            aiohttp.web_ws.WebSocketResponse
    aiohttp.web_exceptions._HTTPMove(aiohttp.web_exceptions.HTTPRedirection)
        aiohttp.web_exceptions.HTTPFound
        aiohttp.web_exceptions.HTTPMovedPermanently
        aiohttp.web_exceptions.HTTPMultipleChoices
        aiohttp.web_exceptions.HTTPPermanentRedirect
        aiohttp.web_exceptions.HTTPSeeOther
        aiohttp.web_exceptions.HTTPTemporaryRedirect
        aiohttp.web_exceptions.HTTPUseProxy
    aiohttp.web_urldispatcher.PrefixResource(aiohttp.web_urldispatcher.AbstractResource)
        aiohttp.web_urldispatcher.StaticResource
    aiohttp.web_urldispatcher._RouteDef(builtins.tuple)
        aiohttp.web_urldispatcher.RouteDef
    aiohttp.web_ws.WebSocketReady(builtins.tuple)
        aiohttp.web_ws.WebSocketReady
    asyncio.protocols.Protocol(asyncio.protocols.BaseProtocol)
        aiohttp.web_protocol.RequestHandler(asyncio.streams.FlowControlMixin, asyncio.protocols.Protocol)
    asyncio.streams.FlowControlMixin(asyncio.protocols.Protocol)
        aiohttp.web_protocol.RequestHandler(asyncio.streams.FlowControlMixin, asyncio.protocols.Protocol)
    builtins.Exception(builtins.BaseException)
        aiohttp.web_protocol.RequestPayloadError
    builtins.dict(builtins.object)
        aiohttp.web_urldispatcher.UrlMappingMatchInfo(builtins.dict, aiohttp.abc.AbstractMatchInfo)
    builtins.object
        aiohttp.web_server.Server
    builtins.tuple(builtins.object)
        aiohttp.http_writer.HttpVersion
        aiohttp.web_request.Field
    collections.abc.Iterable(builtins.object)
        aiohttp.web_urldispatcher.AbstractResource(collections.abc.Sized, collections.abc.Iterable)
            aiohttp.web_urldispatcher.Resource
                aiohttp.web_urldispatcher.DynamicResource
                aiohttp.web_urldispatcher.PlainResource
    collections.abc.Mapping(collections.abc.Sized, collections.abc.Iterable, collections.abc.Container)
        aiohttp.web_urldispatcher.UrlDispatcher(aiohttp.abc.AbstractRouter, collections.abc.Mapping)
    collections.abc.MutableMapping(collections.abc.Mapping)
        Application
        aiohttp.web_request.BaseRequest(collections.abc.MutableMapping, aiohttp.helpers.HeadersMixin)
            aiohttp.web_request.Request
    collections.abc.Sequence(collections.abc.Sized, collections.abc.Iterable, collections.abc.Container)
        aiohttp.web_urldispatcher.RouteTableDef
    collections.abc.Sized(builtins.object)
        aiohttp.web_urldispatcher.AbstractResource(collections.abc.Sized, collections.abc.Iterable)
            aiohttp.web_urldispatcher.Resource
                aiohttp.web_urldispatcher.DynamicResource
                aiohttp.web_urldispatcher.PlainResource
    enum.Enum(builtins.object)
        aiohttp.web_response.ContentCoding
    enum.IntEnum(builtins.int, enum.Enum)
        aiohttp.http_websocket.WSMsgType
    
    class AAbbssttrraaccttRReessoouurrccee(collections.abc.Sized, collections.abc.Iterable)
     |  Method resolution order:
     |      AbstractResource
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, *, name=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  aadddd__pprreeffiixx(self, prefix)
     |      Add a prefix to processed URLs.
     |      
     |      Required for subapplications support.
     |  
     |  ffrreeeezzee(self)
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  rreessoollvvee(self, request)
     |      Resolve resource
     |      
     |      Return (UrlMappingMatchInfo, allowed_methods) pair.
     |  
     |  uurrll(self, **kwargs)
     |      Construct url for resource with additional params.
     |      
     |      Deprecated, use url_for() instead.
     |  
     |  uurrll__ffoorr(self, **kwargs)
     |      Construct url for resource with additional params.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  nnaammee
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset({'__iter__', '__len__', 'add_prefix', ...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.Sized:
     |  
     |  ____lleenn____(self)
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.Iterable:
     |  
     |  ____iitteerr____(self)
    
    class AAbbssttrraaccttRRoouuttee(abc.ABC)
     |  Helper class that provides a standard way to create an ABC using
     |  inheritance.
     |  
     |  Method resolution order:
     |      AbstractRoute
     |      abc.ABC
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, method, handler, *, expect_handler=None, resource=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  hhaannddllee__eexxppeecctt__hheeaaddeerr(self, request)
     |  
     |  uurrll(self, **kwargs)
     |      Construct url for resource with additional params.
     |      
     |      Deprecated, use url_for() instead.
     |  
     |  uurrll__ffoorr(self, *args, **kwargs)
     |      Construct url for route with additional params.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  hhaannddlleerr
     |  
     |  mmeetthhoodd
     |  
     |  nnaammee
     |      Optional route's name, always equals to resource's name.
     |  
     |  rreessoouurrccee
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset({'get_info', 'name', 'url', 'url_for'}...
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from abc.ABC:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class AApppplliiccaattiioonn(collections.abc.MutableMapping)
     |  Method resolution order:
     |      Application
     |      collections.abc.MutableMapping
     |      collections.abc.Mapping
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      collections.abc.Container
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ccaallll____(self)
     |      gunicorn compatibility
     |  
     |  ____ddeelliitteemm____(self, key)
     |  
     |  ____eeqq____(self, other)
     |      Return self==value.
     |  
     |  ____ggeettiitteemm____(self, key)
     |  
     |  ____iinniitt____(self, *, logger=<logging.Logger object at 0x7fb079fc5f28>, router=None, middlewares=(), handler_args=None, client_max_size=1048576, loop=None, debug=Ellipsis)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ____sseettiitteemm____(self, key, value)
     |  
     |  aadddd__ssuubbaapppp(self, prefix, subapp)
     |  
     |  cclleeaannuupp(self)
     |      Causes on_cleanup signal
     |      
     |      Should be called after shutdown()
     |  
     |  ffrreeeezzee(self)
     |  
     |  mmaakkee__hhaannddlleerr(self, *, loop=None, access_log_class=<class 'aiohttp.helpers.AccessLogger'>, **kwargs)
     |  
     |  sshhuuttddoowwnn(self)
     |      Causes on_shutdown signal
     |      
     |      Should be called before cleanup()
     |  
     |  ssttaarrttuupp(self)
     |      Causes on_startup signal
     |      
     |      Should be called in the event loop along with the request handler.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ddeebbuugg
     |  
     |  ffrroozzeenn
     |  
     |  lloooopp
     |  
     |  mmiiddddlleewwaarreess
     |  
     |  oonn__cclleeaannuupp
     |  
     |  oonn__lloooopp__aavvaaiillaabbllee
     |  
     |  oonn__ppoosstt__ssiiggnnaall
     |  
     |  oonn__pprree__ssiiggnnaall
     |  
     |  oonn__rreessppoonnssee__pprreeppaarree
     |  
     |  oonn__sshhuuttddoowwnn
     |  
     |  oonn__ssttaarrttuupp
     |  
     |  rroouutteerr
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ____hhaasshh____ = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.MutableMapping:
     |  
     |  cclleeaarr(self)
     |      D.clear() -> None.  Remove all items from D.
     |  
     |  ppoopp(self, key, default=<object object at 0x7fb0869a3050>)
     |      D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
     |      If key is not found, d is returned if given, otherwise KeyError is raised.
     |  
     |  ppooppiitteemm(self)
     |      D.popitem() -> (k, v), remove and return some (key, value) pair
     |      as a 2-tuple; but raise KeyError if D is empty.
     |  
     |  sseettddeeffaauulltt(self, key, default=None)
     |      D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
     |  
     |  uuppddaattee(*args, **kwds)
     |      D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.
     |      If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
     |      If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
     |      In either case, this is followed by: for k, v in F.items(): D[k] = v
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.Mapping:
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ggeett(self, key, default=None)
     |      D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
     |  
     |  iitteemmss(self)
     |      D.items() -> a set-like object providing a view on D's items
     |  
     |  kkeeyyss(self)
     |      D.keys() -> a set-like object providing a view on D's keys
     |  
     |  vvaalluueess(self)
     |      D.values() -> an object providing a view on D's values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
    
    class BBaasseeRReeqquueesstt(collections.abc.MutableMapping, aiohttp.helpers.HeadersMixin)
     |  Method resolution order:
     |      BaseRequest
     |      collections.abc.MutableMapping
     |      collections.abc.Mapping
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      collections.abc.Container
     |      aiohttp.helpers.HeadersMixin
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ddeelliitteemm____(self, key)
     |  
     |  ____ggeettiitteemm____(self, key)
     |  
     |  ____iinniitt____(self, message, payload, protocol, writer, task, loop, *, client_max_size=1048576, state=None, scheme=None, host=None, remote=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ____sseettiitteemm____(self, key, value)
     |  
     |  cclloonnee(self, *, method=<object object at 0x7fb0869a3320>, rel_url=<object object at 0x7fb0869a3320>, headers=<object object at 0x7fb0869a3320>, scheme=<object object at 0x7fb0869a3320>, host=<object object at 0x7fb0869a3320>, remote=<object object at 0x7fb0869a3320>)
     |      Clone itself with replacement some attributes.
     |      
     |      Creates and returns a new instance of Request object. If no parameters
     |      are given, an exact copy is returned. If a parameter is not passed, it
     |      will reuse the one from the current request object.
     |  
     |  jjssoonn(self, *, loads=<function loads at 0x7fb07aa47048>)
     |      Return BODY as JSON.
     |  
     |  mmuullttiippaarrtt(self, *, reader=<class 'aiohttp.multipart.MultipartReader'>)
     |      Return async iterator to process BODY as multipart.
     |  
     |  ppoosstt(self)
     |      Return POST parameters.
     |  
     |  rreeaadd(self)
     |      Read request body if present.
     |      
     |      Returns bytes object with full request content.
     |  
     |  rreelleeaassee(self)
     |      Release request.
     |      
     |      Eat unread part of HTTP BODY if present.
     |  
     |  tteexxtt(self)
     |      Return BODY as text using encoding from .charset.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  GGEETT
     |      A multidict with all the variables in the query string.
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  bbooddyy__eexxiissttss
     |      Return True if request has HTTP BODY, False otherwise.
     |  
     |  ccaann__rreeaadd__bbooddyy
     |      Return True if request's HTTP BODY can be read, False otherwise.
     |  
     |  ccoonntteenntt
     |      Return raw payload stream.
     |  
     |  ccooookkiieess
     |      Return request cookies.
     |      
     |      A read-only dictionary-like object.
     |  
     |  ffoorrwwaarrddeedd
     |      A tuple containing all parsed Forwarded header(s).
     |      
     |      Makes an effort to parse Forwarded headers as specified by RFC 7239:
     |      
     |      - It adds one (immutable) dictionary per Forwarded 'field-value', ie
     |        per proxy. The element corresponds to the data in the Forwarded
     |        field-value added by the first proxy encountered by the client. Each
     |        subsequent item corresponds to those added by later proxies.
     |      - It checks that every value has valid syntax in general as specified
     |        in section 4: either a 'token' or a 'quoted-string'.
     |      - It un-escapes found escape sequences.
     |      - It does NOT validate 'by' and 'for' contents as specified in section
     |        6.
     |      - It does NOT validate 'host' contents (Host ABNF).
     |      - It does NOT validate 'proto' contents for valid URI scheme names.
     |      
     |      Returns a tuple containing one or more immutable dicts
     |  
     |  hhaass__bbooddyy
     |      Return True if request's HTTP BODY can be read, False otherwise.
     |  
     |  hheeaaddeerrss
     |      A case-insensitive multidict proxy with all headers.
     |  
     |  hhoosstt
     |      Hostname of the request.
     |      
     |      Hostname is resolved through the following headers, in this order:
     |      
     |      - Forwarded
     |      - X-Forwarded-Host
     |      - Host
     |      
     |      Returns str, or None if no hostname is found in the headers.
     |  
     |  hhttttpp__rraannggee
     |      The content of Range HTTP header.
     |      
     |      Return a slice instance.
     |  
     |  iiff__mmooddiiffiieedd__ssiinnccee
     |      The value of If-Modified-Since HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  kkeeeepp__aalliivvee
     |      Is keepalive enabled by client?
     |  
     |  lloooopp
     |  
     |  mmeessssaaggee
     |  
     |  mmeetthhoodd
     |      Read only property for getting HTTP method.
     |      
     |      The value is upper-cased str like 'GET', 'POST', 'PUT' etc.
     |  
     |  ppaatthh
     |      The URL including *PATH INFO* without the host or scheme.
     |      
     |      E.g., ``/app/blog``
     |  
     |  ppaatthh__qqss
     |      The URL including PATH_INFO and the query string.
     |      
     |      E.g, /app/blog?id=10
     |  
     |  pprroottooccooll
     |  
     |  qquueerryy
     |      A multidict with all the variables in the query string.
     |  
     |  qquueerryy__ssttrriinngg
     |      The query string in the URL.
     |      
     |      E.g., id=10
     |  
     |  rraaww__hheeaaddeerrss
     |      A sequence of pars for all headers.
     |  
     |  rraaww__ppaatthh
     |      The URL including raw *PATH INFO* without the host or scheme.
     |      Warning, the path is unquoted and may contains non valid URL characters
     |      
     |      E.g., ``/my%2Fpath%7Cwith%21some%25strange%24characters``
     |  
     |  rreell__uurrll
     |  
     |  rreemmoottee
     |      Remote IP of client initiated HTTP request.
     |      
     |      The IP is resolved through the following headers, in this order:
     |      
     |      - Forwarded
     |      - X-Forwarded-For
     |      - peername of opened socket
     |  
     |  sscchheemmee
     |      A string representing the scheme of the request.
     |      
     |      'http' or 'https'.
     |  
     |  sseeccuurree
     |      A bool indicating if the request is handled with SSL.
     |  
     |  ttaasskk
     |  
     |  ttrraannssppoorrtt
     |  
     |  uurrll
     |  
     |  vveerrssiioonn
     |      Read only property for getting HTTP version of request.
     |      
     |      Returns aiohttp.protocol.HttpVersion instance.
     |  
     |  wwrriitteerr
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  PPOOSSTT__MMEETTHHOODDSS = {'DELETE', 'PATCH', 'POST', 'PUT', 'TRACE'}
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.MutableMapping:
     |  
     |  cclleeaarr(self)
     |      D.clear() -> None.  Remove all items from D.
     |  
     |  ppoopp(self, key, default=<object object at 0x7fb0869a3050>)
     |      D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
     |      If key is not found, d is returned if given, otherwise KeyError is raised.
     |  
     |  ppooppiitteemm(self)
     |      D.popitem() -> (k, v), remove and return some (key, value) pair
     |      as a 2-tuple; but raise KeyError if D is empty.
     |  
     |  sseettddeeffaauulltt(self, key, default=None)
     |      D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
     |  
     |  uuppddaattee(*args, **kwds)
     |      D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.
     |      If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
     |      If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
     |      In either case, this is followed by: for k, v in F.items(): D[k] = v
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.Mapping:
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ____eeqq____(self, other)
     |      Return self==value.
     |  
     |  ggeett(self, key, default=None)
     |      D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
     |  
     |  iitteemmss(self)
     |      D.items() -> a set-like object providing a view on D's items
     |  
     |  kkeeyyss(self)
     |      D.keys() -> a set-like object providing a view on D's keys
     |  
     |  vvaalluueess(self)
     |      D.values() -> an object providing a view on D's values
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from collections.abc.Mapping:
     |  
     |  ____hhaasshh____ = None
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
    
    class CCoonntteennttCCooddiinngg(enum.Enum)
     |  An enumeration.
     |  
     |  Method resolution order:
     |      ContentCoding
     |      enum.Enum
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ddeeffllaattee = <ContentCoding.deflate: 'deflate'>
     |  
     |  ggzziipp = <ContentCoding.gzip: 'gzip'>
     |  
     |  iiddeennttiittyy = <ContentCoding.identity: 'identity'>
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from enum.Enum:
     |  
     |  nnaammee
     |      The name of the Enum member.
     |  
     |  vvaalluuee
     |      The value of the Enum member.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from enum.EnumMeta:
     |  
     |  ____mmeemmbbeerrss____
     |      Returns a mapping of member name->value.
     |      
     |      This mapping lists all enum members, including aliases. Note that this
     |      is a read-only view of the internal mapping.
    
    class DDyynnaammiiccRReessoouurrccee(Resource)
     |  Method resolution order:
     |      DynamicResource
     |      Resource
     |      AbstractResource
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, path, *, name=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  aadddd__pprreeffiixx(self, prefix)
     |      Add a prefix to processed URLs.
     |      
     |      Required for subapplications support.
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  uurrll(self, *, parts, query=None)
     |      Construct url for resource with additional params.
     |      
     |      Deprecated, use url_for() instead.
     |  
     |  uurrll__ffoorr(self, **parts)
     |      Construct url for resource with additional params.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DDYYNN = re.compile('\\{(?P<var>[_a-zA-Z][_a-zA-Z0-9]*)\\}')
     |  
     |  DDYYNN__WWIITTHH__RREE = re.compile('\\{(?P<var>[_a-zA-Z][_a-zA-Z0-9]*):(?P<re>.+...
     |  
     |  GGOOOODD = '[^{}/]+'
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Resource:
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  aadddd__rroouuttee(self, method, handler, *, expect_handler=None)
     |  
     |  rreeggiisstteerr__rroouuttee(self, route)
     |  
     |  rreessoollvvee(self, request)
     |      Resolve resource
     |      
     |      Return (UrlMappingMatchInfo, allowed_methods) pair.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AbstractResource:
     |  
     |  ffrreeeezzee(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AbstractResource:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  nnaammee
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
    
    FFiilleeFFiieelldd = class Field(builtins.tuple)
     |  Field(name, filename, file, content_type, headers)
     |  
     |  Method resolution order:
     |      Field
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ggeettnneewwaarrggss____(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  ____rreepprr____(self)
     |      Return a nicely formatted representation string
     |  
     |  __aassddiicctt(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  __rreeppllaaccee(_self, **kwds)
     |      Return a new Field object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  __mmaakkee(iterable, new=<built-in method __new__ of type object at 0x882580>, len=<built-in function len>) from builtins.type
     |      Make a new Field object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  ____nneeww____(_cls, name, filename, file, content_type, headers)
     |      Create new instance of Field(name, filename, file, content_type, headers)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ccoonntteenntt__ttyyppee
     |      Alias for field number 3
     |  
     |  ffiillee
     |      Alias for field number 2
     |  
     |  ffiilleennaammee
     |      Alias for field number 1
     |  
     |  hheeaaddeerrss
     |      Alias for field number 4
     |  
     |  nnaammee
     |      Alias for field number 0
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __ffiieellddss = ('name', 'filename', 'file', 'content_type', 'headers')
     |  
     |  __ssoouurrccee = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  ____aadddd____(self, value, /)
     |      Return self+value.
     |  
     |  ____ccoonnttaaiinnss____(self, key, /)
     |      Return key in self.
     |  
     |  ____eeqq____(self, value, /)
     |      Return self==value.
     |  
     |  ____ggee____(self, value, /)
     |      Return self>=value.
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____ggeettiitteemm____(self, key, /)
     |      Return self[key].
     |  
     |  ____ggtt____(self, value, /)
     |      Return self>value.
     |  
     |  ____hhaasshh____(self, /)
     |      Return hash(self).
     |  
     |  ____iitteerr____(self, /)
     |      Implement iter(self).
     |  
     |  ____llee____(self, value, /)
     |      Return self<=value.
     |  
     |  ____lleenn____(self, /)
     |      Return len(self).
     |  
     |  ____lltt____(self, value, /)
     |      Return self<value.
     |  
     |  ____mmuull____(self, value, /)
     |      Return self*value.n
     |  
     |  ____nnee____(self, value, /)
     |      Return self!=value.
     |  
     |  ____rrmmuull____(self, value, /)
     |      Return self*value.
     |  
     |  ccoouunntt(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  iinnddeexx(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class FFiilleeRReessppoonnssee(aiohttp.web_response.StreamResponse)
     |  A response object can be used to send files.
     |  
     |  Method resolution order:
     |      FileResponse
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, path, chunk_size=262144, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  pprreeppaarree(self, request)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  wwrriittee__eeooff(self, data=b'')
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class HHTTTTPPAAcccceepptteedd(HTTPSuccessful)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPAccepted
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 202
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPBBaaddGGaatteewwaayy(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPBadGateway
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 502
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPBBaaddRReeqquueesstt(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPBadRequest
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 400
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPCClliieennttEErrrroorr(HTTPError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ssttaattuuss__ccooddee = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPCCoonnfflliicctt(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPConflict
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 409
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPCCrreeaatteedd(HTTPSuccessful)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPCreated
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 201
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPEErrrroorr(HTTPException)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ssttaattuuss__ccooddee = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPEExxcceeppttiioonn(aiohttp.web_response.Response, builtins.Exception)
     |  Common base class for all non-exit exceptions.
     |  
     |  Method resolution order:
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ssttaattuuss__ccooddee = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPEExxppeeccttaattiioonnFFaaiilleedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPExpectationFailed
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 417
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPFFaaiilleeddDDeeppeennddeennccyy(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPFailedDependency
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 424
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPFFoorrbbiiddddeenn(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPForbidden
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 403
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPFFoouunndd(_HTTPMove)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPFound
     |      _HTTPMove
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 302
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _HTTPMove:
     |  
     |  ____iinniitt____(self, location, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPGGaatteewwaayyTTiimmeeoouutt(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPGatewayTimeout
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 504
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPGGoonnee(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPGone
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 410
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPIInnssuuffffiicciieennttSSttoorraaggee(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPInsufficientStorage
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 507
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPIInntteerrnnaallSSeerrvveerrEErrrroorr(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPInternalServerError
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 500
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPLLeennggtthhRReeqquuiirreedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPLengthRequired
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 411
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPMMeetthhooddNNoottAAlllloowweedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPMethodNotAllowed
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, method, allowed_methods, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 405
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPMMiissddiirreecctteeddRReeqquueesstt(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPMisdirectedRequest
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 421
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPMMoovveeddPPeerrmmaanneennttllyy(_HTTPMove)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPMovedPermanently
     |      _HTTPMove
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 301
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _HTTPMove:
     |  
     |  ____iinniitt____(self, location, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPMMuullttiipplleeCChhooiicceess(_HTTPMove)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPMultipleChoices
     |      _HTTPMove
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 300
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _HTTPMove:
     |  
     |  ____iinniitt____(self, location, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNeettwwoorrkkAAuutthheennttiiccaattiioonnRReeqquuiirreedd(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPNetworkAuthenticationRequired
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 511
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNooCCoonntteenntt(HTTPSuccessful)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPNoContent
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  eemmppttyy__bbooddyy = True
     |  
     |  ssttaattuuss__ccooddee = 204
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNoonnAAuutthhoorriittaattiivveeIInnffoorrmmaattiioonn(HTTPSuccessful)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPNonAuthoritativeInformation
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 203
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNoottAAcccceeppttaabbllee(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPNotAcceptable
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 406
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNoottEExxtteennddeedd(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPNotExtended
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 510
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNoottFFoouunndd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPNotFound
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 404
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNoottIImmpplleemmeenntteedd(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPNotImplemented
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 501
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPNNoottMMooddiiffiieedd(HTTPRedirection)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPNotModified
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  eemmppttyy__bbooddyy = True
     |  
     |  ssttaattuuss__ccooddee = 304
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPOOkk(HTTPSuccessful)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPOk
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 200
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPPPaarrttiiaallCCoonntteenntt(HTTPSuccessful)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPPartialContent
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 206
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPPPaayymmeennttRReeqquuiirreedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPPaymentRequired
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 402
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPPPeerrmmaanneennttRReeddiirreecctt(_HTTPMove)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPPermanentRedirect
     |      _HTTPMove
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 308
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _HTTPMove:
     |  
     |  ____iinniitt____(self, location, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPPPrreeccoonnddiittiioonnFFaaiilleedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPPreconditionFailed
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 412
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPPPrreeccoonnddiittiioonnRReeqquuiirreedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPPreconditionRequired
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 428
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPPPrrooxxyyAAuutthheennttiiccaattiioonnRReeqquuiirreedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPProxyAuthenticationRequired
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 407
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPRReeddiirreeccttiioonn(HTTPException)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ssttaattuuss__ccooddee = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPRReeqquueessttEEnnttiittyyTTooooLLaarrggee(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPRequestEntityTooLarge
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 413
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPRReeqquueessttHHeeaaddeerrFFiieellddssTTooooLLaarrggee(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPRequestHeaderFieldsTooLarge
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 431
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPRReeqquueessttRRaannggeeNNoottSSaattiissffiiaabbllee(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPRequestRangeNotSatisfiable
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 416
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPRReeqquueessttTTiimmeeoouutt(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPRequestTimeout
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 408
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPRReeqquueessttUURRIITTooooLLoonngg(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPRequestURITooLong
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 414
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPRReesseettCCoonntteenntt(HTTPSuccessful)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPResetContent
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  eemmppttyy__bbooddyy = True
     |  
     |  ssttaattuuss__ccooddee = 205
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPSSeeeeOOtthheerr(_HTTPMove)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPSeeOther
     |      _HTTPMove
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 303
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _HTTPMove:
     |  
     |  ____iinniitt____(self, location, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPSSeerrvveerrEErrrroorr(HTTPError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ssttaattuuss__ccooddee = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPSSeerrvviicceeUUnnaavvaaiillaabbllee(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPServiceUnavailable
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 503
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPSSuucccceessssffuull(HTTPException)
     |  Base class for exceptions with status codes in the 200s.
     |  
     |  Method resolution order:
     |      HTTPSuccessful
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ssttaattuuss__ccooddee = None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPTTeemmppoorraarryyRReeddiirreecctt(_HTTPMove)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPTemporaryRedirect
     |      _HTTPMove
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 307
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _HTTPMove:
     |  
     |  ____iinniitt____(self, location, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPTTooooMMaannyyRReeqquueessttss(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPTooManyRequests
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 429
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPUUnnaauutthhoorriizzeedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPUnauthorized
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 401
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPUUnnaavvaaiillaabblleeFFoorrLLeeggaallRReeaassoonnss(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPUnavailableForLegalReasons
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, link, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 451
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPUUnnpprroocceessssaabblleeEEnnttiittyy(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPUnprocessableEntity
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 422
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPUUnnssuuppppoorrtteeddMMeeddiiaaTTyyppee(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPUnsupportedMediaType
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 415
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPUUppggrraaddeeRReeqquuiirreedd(HTTPClientError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPUpgradeRequired
     |      HTTPClientError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 426
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPUUsseePPrrooxxyy(_HTTPMove)
     |  Base class for exceptions with status codes in the 300s.
     |  
     |  Method resolution order:
     |      HTTPUseProxy
     |      _HTTPMove
     |      HTTPRedirection
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 305
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _HTTPMove:
     |  
     |  ____iinniitt____(self, location, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPVVaarriiaannttAAllssooNNeeggoottiiaatteess(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPVariantAlsoNegotiates
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 506
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHTTTTPPVVeerrssiioonnNNoottSSuuppppoorrtteedd(HTTPServerError)
     |  Base class for exceptions with status codes in the 400s and 500s.
     |  
     |  Method resolution order:
     |      HTTPVersionNotSupported
     |      HTTPServerError
     |      HTTPError
     |      HTTPException
     |      aiohttp.web_response.Response
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  ssttaattuuss__ccooddee = 505
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from HTTPException:
     |  
     |  ____iinniitt____(self, *, headers=None, reason=None, body=None, text=None, content_type=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from HTTPException:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from HTTPException:
     |  
     |  eemmppttyy__bbooddyy = False
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.Response:
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.Response:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class HHttttppVVeerrssiioonn(builtins.tuple)
     |  HttpVersion(major, minor)
     |  
     |  Method resolution order:
     |      HttpVersion
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ggeettnneewwaarrggss____(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  ____rreepprr____(self)
     |      Return a nicely formatted representation string
     |  
     |  __aassddiicctt(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  __rreeppllaaccee(_self, **kwds)
     |      Return a new HttpVersion object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  __mmaakkee(iterable, new=<built-in method __new__ of type object at 0x882580>, len=<built-in function len>) from builtins.type
     |      Make a new HttpVersion object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  ____nneeww____(_cls, major, minor)
     |      Create new instance of HttpVersion(major, minor)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  mmaajjoorr
     |      Alias for field number 0
     |  
     |  mmiinnoorr
     |      Alias for field number 1
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __ffiieellddss = ('major', 'minor')
     |  
     |  __ssoouurrccee = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  ____aadddd____(self, value, /)
     |      Return self+value.
     |  
     |  ____ccoonnttaaiinnss____(self, key, /)
     |      Return key in self.
     |  
     |  ____eeqq____(self, value, /)
     |      Return self==value.
     |  
     |  ____ggee____(self, value, /)
     |      Return self>=value.
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____ggeettiitteemm____(self, key, /)
     |      Return self[key].
     |  
     |  ____ggtt____(self, value, /)
     |      Return self>value.
     |  
     |  ____hhaasshh____(self, /)
     |      Return hash(self).
     |  
     |  ____iitteerr____(self, /)
     |      Implement iter(self).
     |  
     |  ____llee____(self, value, /)
     |      Return self<=value.
     |  
     |  ____lleenn____(self, /)
     |      Return len(self).
     |  
     |  ____lltt____(self, value, /)
     |      Return self<value.
     |  
     |  ____mmuull____(self, value, /)
     |      Return self*value.n
     |  
     |  ____nnee____(self, value, /)
     |      Return self!=value.
     |  
     |  ____rrmmuull____(self, value, /)
     |      Return self*value.
     |  
     |  ccoouunntt(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  iinnddeexx(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    MMssggTTyyppee = class WSMsgType(enum.IntEnum)
     |  An enumeration.
     |  
     |  Method resolution order:
     |      WSMsgType
     |      enum.IntEnum
     |      builtins.int
     |      enum.Enum
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  BBIINNAARRYY = <WSMsgType.BINARY: 2>
     |  
     |  CCLLOOSSEE = <WSMsgType.CLOSE: 8>
     |  
     |  CCLLOOSSEEDD = <WSMsgType.CLOSED: 257>
     |  
     |  CCLLOOSSIINNGG = <WSMsgType.CLOSING: 256>
     |  
     |  CCOONNTTIINNUUAATTIIOONN = <WSMsgType.CONTINUATION: 0>
     |  
     |  EERRRROORR = <WSMsgType.ERROR: 258>
     |  
     |  PPIINNGG = <WSMsgType.PING: 9>
     |  
     |  PPOONNGG = <WSMsgType.PONG: 10>
     |  
     |  TTEEXXTT = <WSMsgType.TEXT: 1>
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from enum.Enum:
     |  
     |  nnaammee
     |      The name of the Enum member.
     |  
     |  vvaalluuee
     |      The value of the Enum member.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from enum.EnumMeta:
     |  
     |  ____mmeemmbbeerrss____
     |      Returns a mapping of member name->value.
     |      
     |      This mapping lists all enum members, including aliases. Note that this
     |      is a read-only view of the internal mapping.
    
    class PPllaaiinnRReessoouurrccee(Resource)
     |  Method resolution order:
     |      PlainResource
     |      Resource
     |      AbstractResource
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, path, *, name=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  aadddd__pprreeffiixx(self, prefix)
     |      Add a prefix to processed URLs.
     |      
     |      Required for subapplications support.
     |  
     |  ffrreeeezzee(self)
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  uurrll(self, *, query=None)
     |      Construct url for resource with additional params.
     |      
     |      Deprecated, use url_for() instead.
     |  
     |  uurrll__ffoorr(self)
     |      Construct url for resource with additional params.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Resource:
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  aadddd__rroouuttee(self, method, handler, *, expect_handler=None)
     |  
     |  rreeggiisstteerr__rroouuttee(self, route)
     |  
     |  rreessoollvvee(self, request)
     |      Resolve resource
     |      
     |      Return (UrlMappingMatchInfo, allowed_methods) pair.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AbstractResource:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  nnaammee
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
    
    class RReeqquueesstt(BaseRequest)
     |  Method resolution order:
     |      Request
     |      BaseRequest
     |      collections.abc.MutableMapping
     |      collections.abc.Mapping
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      collections.abc.Container
     |      aiohttp.helpers.HeadersMixin
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  cclloonnee(self, *, method=<object object at 0x7fb0869a3320>, rel_url=<object object at 0x7fb0869a3320>, headers=<object object at 0x7fb0869a3320>, scheme=<object object at 0x7fb0869a3320>, host=<object object at 0x7fb0869a3320>, remote=<object object at 0x7fb0869a3320>)
     |      Clone itself with replacement some attributes.
     |      
     |      Creates and returns a new instance of Request object. If no parameters
     |      are given, an exact copy is returned. If a parameter is not passed, it
     |      will reuse the one from the current request object.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  aapppp
     |      Application instance.
     |  
     |  mmaattcchh__iinnffoo
     |      Result of route resolving.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from BaseRequest:
     |  
     |  ____ddeelliitteemm____(self, key)
     |  
     |  ____ggeettiitteemm____(self, key)
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ____sseettiitteemm____(self, key, value)
     |  
     |  jjssoonn(self, *, loads=<function loads at 0x7fb07aa47048>)
     |      Return BODY as JSON.
     |  
     |  mmuullttiippaarrtt(self, *, reader=<class 'aiohttp.multipart.MultipartReader'>)
     |      Return async iterator to process BODY as multipart.
     |  
     |  ppoosstt(self)
     |      Return POST parameters.
     |  
     |  rreeaadd(self)
     |      Read request body if present.
     |      
     |      Returns bytes object with full request content.
     |  
     |  rreelleeaassee(self)
     |      Release request.
     |      
     |      Eat unread part of HTTP BODY if present.
     |  
     |  tteexxtt(self)
     |      Return BODY as text using encoding from .charset.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from BaseRequest:
     |  
     |  GGEETT
     |      A multidict with all the variables in the query string.
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  bbooddyy__eexxiissttss
     |      Return True if request has HTTP BODY, False otherwise.
     |  
     |  ccaann__rreeaadd__bbooddyy
     |      Return True if request's HTTP BODY can be read, False otherwise.
     |  
     |  ccoonntteenntt
     |      Return raw payload stream.
     |  
     |  ccooookkiieess
     |      Return request cookies.
     |      
     |      A read-only dictionary-like object.
     |  
     |  ffoorrwwaarrddeedd
     |      A tuple containing all parsed Forwarded header(s).
     |      
     |      Makes an effort to parse Forwarded headers as specified by RFC 7239:
     |      
     |      - It adds one (immutable) dictionary per Forwarded 'field-value', ie
     |        per proxy. The element corresponds to the data in the Forwarded
     |        field-value added by the first proxy encountered by the client. Each
     |        subsequent item corresponds to those added by later proxies.
     |      - It checks that every value has valid syntax in general as specified
     |        in section 4: either a 'token' or a 'quoted-string'.
     |      - It un-escapes found escape sequences.
     |      - It does NOT validate 'by' and 'for' contents as specified in section
     |        6.
     |      - It does NOT validate 'host' contents (Host ABNF).
     |      - It does NOT validate 'proto' contents for valid URI scheme names.
     |      
     |      Returns a tuple containing one or more immutable dicts
     |  
     |  hhaass__bbooddyy
     |      Return True if request's HTTP BODY can be read, False otherwise.
     |  
     |  hheeaaddeerrss
     |      A case-insensitive multidict proxy with all headers.
     |  
     |  hhoosstt
     |      Hostname of the request.
     |      
     |      Hostname is resolved through the following headers, in this order:
     |      
     |      - Forwarded
     |      - X-Forwarded-Host
     |      - Host
     |      
     |      Returns str, or None if no hostname is found in the headers.
     |  
     |  hhttttpp__rraannggee
     |      The content of Range HTTP header.
     |      
     |      Return a slice instance.
     |  
     |  iiff__mmooddiiffiieedd__ssiinnccee
     |      The value of If-Modified-Since HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  kkeeeepp__aalliivvee
     |      Is keepalive enabled by client?
     |  
     |  lloooopp
     |  
     |  mmeessssaaggee
     |  
     |  mmeetthhoodd
     |      Read only property for getting HTTP method.
     |      
     |      The value is upper-cased str like 'GET', 'POST', 'PUT' etc.
     |  
     |  ppaatthh
     |      The URL including *PATH INFO* without the host or scheme.
     |      
     |      E.g., ``/app/blog``
     |  
     |  ppaatthh__qqss
     |      The URL including PATH_INFO and the query string.
     |      
     |      E.g, /app/blog?id=10
     |  
     |  pprroottooccooll
     |  
     |  qquueerryy
     |      A multidict with all the variables in the query string.
     |  
     |  qquueerryy__ssttrriinngg
     |      The query string in the URL.
     |      
     |      E.g., id=10
     |  
     |  rraaww__hheeaaddeerrss
     |      A sequence of pars for all headers.
     |  
     |  rraaww__ppaatthh
     |      The URL including raw *PATH INFO* without the host or scheme.
     |      Warning, the path is unquoted and may contains non valid URL characters
     |      
     |      E.g., ``/my%2Fpath%7Cwith%21some%25strange%24characters``
     |  
     |  rreell__uurrll
     |  
     |  rreemmoottee
     |      Remote IP of client initiated HTTP request.
     |      
     |      The IP is resolved through the following headers, in this order:
     |      
     |      - Forwarded
     |      - X-Forwarded-For
     |      - peername of opened socket
     |  
     |  sscchheemmee
     |      A string representing the scheme of the request.
     |      
     |      'http' or 'https'.
     |  
     |  sseeccuurree
     |      A bool indicating if the request is handled with SSL.
     |  
     |  ttaasskk
     |  
     |  ttrraannssppoorrtt
     |  
     |  uurrll
     |  
     |  vveerrssiioonn
     |      Read only property for getting HTTP version of request.
     |      
     |      Returns aiohttp.protocol.HttpVersion instance.
     |  
     |  wwrriitteerr
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from BaseRequest:
     |  
     |  PPOOSSTT__MMEETTHHOODDSS = {'DELETE', 'PATCH', 'POST', 'PUT', 'TRACE'}
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.MutableMapping:
     |  
     |  cclleeaarr(self)
     |      D.clear() -> None.  Remove all items from D.
     |  
     |  ppoopp(self, key, default=<object object at 0x7fb0869a3050>)
     |      D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
     |      If key is not found, d is returned if given, otherwise KeyError is raised.
     |  
     |  ppooppiitteemm(self)
     |      D.popitem() -> (k, v), remove and return some (key, value) pair
     |      as a 2-tuple; but raise KeyError if D is empty.
     |  
     |  sseettddeeffaauulltt(self, key, default=None)
     |      D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
     |  
     |  uuppddaattee(*args, **kwds)
     |      D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.
     |      If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
     |      If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
     |      In either case, this is followed by: for k, v in F.items(): D[k] = v
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.Mapping:
     |  
     |  ____ccoonnttaaiinnss____(self, key)
     |  
     |  ____eeqq____(self, other)
     |      Return self==value.
     |  
     |  ggeett(self, key, default=None)
     |      D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
     |  
     |  iitteemmss(self)
     |      D.items() -> a set-like object providing a view on D's items
     |  
     |  kkeeyyss(self)
     |      D.keys() -> a set-like object providing a view on D's keys
     |  
     |  vvaalluueess(self)
     |      D.values() -> an object providing a view on D's values
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from collections.abc.Mapping:
     |  
     |  ____hhaasshh____ = None
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
    
    class RReeqquueessttHHaannddlleerr(asyncio.streams.FlowControlMixin, asyncio.protocols.Protocol)
     |  HTTP protocol implementation.
     |  
     |  RequestHandler handles incoming HTTP request. It reads request line,
     |  request headers and request payload and calls handle_request() method.
     |  By default it always returns with 404 response.
     |  
     |  RequestHandler handles errors in incoming request, like bad
     |  status line, bad headers or incomplete payload. If any error occurs,
     |  connection gets closed.
     |  
     |  :param keepalive_timeout: number of seconds before closing
     |                            keep-alive connection
     |  :type keepalive_timeout: int or None
     |  
     |  :param bool tcp_keepalive: TCP keep-alive is on, default is on
     |  
     |  :param bool debug: enable debug mode
     |  
     |  :param logger: custom logger object
     |  :type logger: aiohttp.log.server_logger
     |  
     |  :param access_log_class: custom class for access_logger
     |  :type access_log_class: aiohttp.abc.AbstractAccessLogger
     |  
     |  :param access_log: custom logging object
     |  :type access_log: aiohttp.log.server_logger
     |  
     |  :param str access_log_format: access log format string
     |  
     |  :param loop: Optional event loop
     |  
     |  :param int max_line_size: Optional maximum header line size
     |  
     |  :param int max_field_size: Optional maximum header field size
     |  
     |  :param int max_headers: Optional maximum header size
     |  
     |  Method resolution order:
     |      RequestHandler
     |      asyncio.streams.FlowControlMixin
     |      asyncio.protocols.Protocol
     |      asyncio.protocols.BaseProtocol
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, manager, *, loop=None, keepalive_timeout=75, tcp_keepalive=True, slow_request_timeout=None, logger=<logging.Logger object at 0x7fb079fc5ef0>, access_log_class=<class 'aiohttp.helpers.AccessLogger'>, access_log=<logging.Logger object at 0x7fb079fbd7b8>, access_log_format='%a %l %u %t "%r" %s %b "%{Referrer}i" "%{User-Agent}i"', debug=False, max_line_size=8190, max_headers=32768, max_field_size=8190, lingering_time=10.0, max_concurrent_handlers=1, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  cclloossee(self)
     |      Stop accepting new pipelinig messages and close
     |      connection when handlers done processing messages
     |  
     |  ccoonnnneeccttiioonn__lloosstt(self, exc)
     |      Called when the connection is lost or closed.
     |      
     |      The argument is an exception object or None (the latter
     |      meaning a regular EOF is received or the connection was
     |      aborted or closed).
     |  
     |  ccoonnnneeccttiioonn__mmaaddee(self, transport)
     |      Called when a connection is made.
     |      
     |      The argument is the transport representing the pipe connection.
     |      To receive data, wait for data_received() calls.
     |      When the connection is closed, connection_lost() is called.
     |  
     |  ddaattaa__rreecceeiivveedd(self, data)
     |      Called when some data is received.
     |      
     |      The argument is a bytes object.
     |  
     |  eeooff__rreecceeiivveedd(self)
     |      Called when the other end calls write_eof() or equivalent.
     |      
     |      If this returns a false value (including None), the transport
     |      will close itself.  If it returns a true value, closing the
     |      transport is up to the protocol.
     |  
     |  ffoorrccee__cclloossee(self, send_last_heartbeat=False)
     |      Force close connection
     |  
     |  hhaannddllee__eerrrroorr(self, request, status=500, exc=None, message=None)
     |      Handle errors.
     |      
     |      Returns HTTP response with specific status code. Logs additional
     |      information. It always closes current connection.
     |  
     |  hhaannddllee__ppaarrssee__eerrrroorr(self, writer, status, exc=None, message=None)
     |  
     |  kkeeeepp__aalliivvee(self, val)
     |      Set keep-alive connection mode.
     |      
     |      :param bool val: new state.
     |  
     |  lloogg__aacccceessss(self, request, response, time)
     |  
     |  lloogg__ddeebbuugg(self, *args, **kw)
     |  
     |  lloogg__eexxcceeppttiioonn(self, *args, **kw)
     |  
     |  ppaauussee__rreeaaddiinngg(self)
     |  
     |  rreessuummee__rreeaaddiinngg(self)
     |  
     |  sseett__ppaarrsseerr(self, parser)
     |  
     |  sshhuuttddoowwnn(self, timeout=15.0)
     |      Worker process is about to exit, we need cleanup everything and
     |      stop accepting requests. It is especially important for keep-alive
     |      connections.
     |  
     |  ssttaarrtt(self, message, payload, handler)
     |      Start processing of incoming requests.
     |      
     |      It reads request line, request headers and request payload, then
     |      calls handle_request() method. Subclass has to override
     |      handle_request(). start() handles various exceptions in request
     |      or response handling. Connection is being closed always unless
     |      keep_alive(True) specified.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  kkeeeeppaalliivvee__ttiimmeeoouutt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from asyncio.streams.FlowControlMixin:
     |  
     |  ppaauussee__wwrriittiinngg(self)
     |      Called when the transport's buffer goes over the high-water mark.
     |      
     |      Pause and resume calls are paired -- pause_writing() is called
     |      once when the buffer goes strictly over the high-water mark
     |      (even if subsequent writes increases the buffer size even
     |      more), and eventually resume_writing() is called once when the
     |      buffer size reaches the low-water mark.
     |      
     |      Note that if the buffer size equals the high-water mark,
     |      pause_writing() is not called -- it must go strictly over.
     |      Conversely, resume_writing() is called when the buffer size is
     |      equal or lower than the low-water mark.  These end conditions
     |      are important to ensure that things go as expected when either
     |      mark is zero.
     |      
     |      NOTE: This is the only Protocol callback that is not called
     |      through EventLoop.call_soon() -- if it were, it would have no
     |      effect when it's most needed (when the app keeps writing
     |      without yielding until pause_writing() is called).
     |  
     |  rreessuummee__wwrriittiinngg(self)
     |      Called when the transport's buffer drains below the low-water mark.
     |      
     |      See pause_writing() for details.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from asyncio.protocols.BaseProtocol:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class RReeqquueessttPPaayyllooaaddEErrrroorr(builtins.Exception)
     |  Payload parsing error.
     |  
     |  Method resolution order:
     |      RequestPayloadError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  ____iinniitt____(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  ____ddeellaattttrr____(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____rreedduuccee____(...)
     |      helper for pickle
     |  
     |  ____rreepprr____(self, /)
     |      Return repr(self).
     |  
     |  ____sseettaattttrr____(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  ____sseettssttaattee____(...)
     |  
     |  ____ssttrr____(self, /)
     |      Return str(self).
     |  
     |  wwiitthh__ttrraacceebbaacckk(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  ____ccaauussee____
     |      exception cause
     |  
     |  ____ccoonntteexxtt____
     |      exception context
     |  
     |  ____ddiicctt____
     |  
     |  ____ssuupppprreessss__ccoonntteexxtt____
     |  
     |  ____ttrraacceebbaacckk____
     |  
     |  aarrggss
    
    class RReessoouurrccee(AbstractResource)
     |  Method resolution order:
     |      Resource
     |      AbstractResource
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, *, name=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  aadddd__rroouuttee(self, method, handler, *, expect_handler=None)
     |  
     |  rreeggiisstteerr__rroouuttee(self, route)
     |  
     |  rreessoollvvee(self, request)
     |      Resolve resource
     |      
     |      Return (UrlMappingMatchInfo, allowed_methods) pair.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset({'add_prefix', 'get_info', 'url', 'url...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AbstractResource:
     |  
     |  aadddd__pprreeffiixx(self, prefix)
     |      Add a prefix to processed URLs.
     |      
     |      Required for subapplications support.
     |  
     |  ffrreeeezzee(self)
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  uurrll(self, **kwargs)
     |      Construct url for resource with additional params.
     |      
     |      Deprecated, use url_for() instead.
     |  
     |  uurrll__ffoorr(self, **kwargs)
     |      Construct url for resource with additional params.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AbstractResource:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  nnaammee
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
    
    class RReessoouurrcceeRRoouuttee(AbstractRoute)
     |  A route with resource
     |  
     |  Method resolution order:
     |      ResourceRoute
     |      AbstractRoute
     |      abc.ABC
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, method, handler, resource, *, expect_handler=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  uurrll(self, **kwargs)
     |      Construct url for route with additional params.
     |  
     |  uurrll__ffoorr(self, *args, **kwargs)
     |      Construct url for route with additional params.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  nnaammee
     |      Optional route's name, always equals to resource's name.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AbstractRoute:
     |  
     |  hhaannddllee__eexxppeecctt__hheeaaddeerr(self, request)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AbstractRoute:
     |  
     |  hhaannddlleerr
     |  
     |  mmeetthhoodd
     |  
     |  rreessoouurrccee
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from abc.ABC:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class RReessppoonnssee(StreamResponse)
     |  Method resolution order:
     |      Response
     |      StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, *, body=None, status=200, reason=None, text=None, headers=None, content_type=None, charset=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  bbooddyy
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  tteexxtt
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class RRoouutteeDDeeff(_RouteDef)
     |  _RouteDef(method, path, handler, kwargs)
     |  
     |  Method resolution order:
     |      RouteDef
     |      _RouteDef
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____rreepprr____(self)
     |      Return a nicely formatted representation string
     |  
     |  rreeggiisstteerr(self, router)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _RouteDef:
     |  
     |  ____ggeettnneewwaarrggss____(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  __aassddiicctt(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  __rreeppllaaccee(_self, **kwds)
     |      Return a new _RouteDef object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from _RouteDef:
     |  
     |  __mmaakkee(iterable, new=<built-in method __new__ of type object at 0x882580>, len=<built-in function len>) from builtins.type
     |      Make a new _RouteDef object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from _RouteDef:
     |  
     |  ____nneeww____(_cls, method, path, handler, kwargs)
     |      Create new instance of _RouteDef(method, path, handler, kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _RouteDef:
     |  
     |  hhaannddlleerr
     |      Alias for field number 2
     |  
     |  kkwwaarrggss
     |      Alias for field number 3
     |  
     |  mmeetthhoodd
     |      Alias for field number 0
     |  
     |  ppaatthh
     |      Alias for field number 1
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from _RouteDef:
     |  
     |  __ffiieellddss = ('method', 'path', 'handler', 'kwargs')
     |  
     |  __ssoouurrccee = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  ____aadddd____(self, value, /)
     |      Return self+value.
     |  
     |  ____ccoonnttaaiinnss____(self, key, /)
     |      Return key in self.
     |  
     |  ____eeqq____(self, value, /)
     |      Return self==value.
     |  
     |  ____ggee____(self, value, /)
     |      Return self>=value.
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____ggeettiitteemm____(self, key, /)
     |      Return self[key].
     |  
     |  ____ggtt____(self, value, /)
     |      Return self>value.
     |  
     |  ____hhaasshh____(self, /)
     |      Return hash(self).
     |  
     |  ____iitteerr____(self, /)
     |      Implement iter(self).
     |  
     |  ____llee____(self, value, /)
     |      Return self<=value.
     |  
     |  ____lleenn____(self, /)
     |      Return len(self).
     |  
     |  ____lltt____(self, value, /)
     |      Return self<value.
     |  
     |  ____mmuull____(self, value, /)
     |      Return self*value.n
     |  
     |  ____nnee____(self, value, /)
     |      Return self!=value.
     |  
     |  ____rrmmuull____(self, value, /)
     |      Return self*value.
     |  
     |  ccoouunntt(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  iinnddeexx(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class RRoouutteeTTaabblleeDDeeff(collections.abc.Sequence)
     |  Route definition table
     |  
     |  Method resolution order:
     |      RouteTableDef
     |      collections.abc.Sequence
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      collections.abc.Container
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ccoonnttaaiinnss____(self, item)
     |  
     |  ____ggeettiitteemm____(self, index)
     |  
     |  ____iinniitt____(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeelleettee(self, path, **kwargs)
     |  
     |  ggeett(self, path, **kwargs)
     |  
     |  hheeaadd(self, path, **kwargs)
     |  
     |  ppaattcchh(self, path, **kwargs)
     |  
     |  ppoosstt(self, path, **kwargs)
     |  
     |  ppuutt(self, path, **kwargs)
     |  
     |  rroouuttee(self, method, path, **kwargs)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.Sequence:
     |  
     |  ____rreevveerrsseedd____(self)
     |  
     |  ccoouunntt(self, value)
     |      S.count(value) -> integer -- return number of occurrences of value
     |  
     |  iinnddeexx(self, value, start=0, stop=None)
     |      S.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
    
    class SSeerrvveerr(builtins.object)
     |  Methods defined here:
     |  
     |  ____ccaallll____(self)
     |      Call self as a function.
     |  
     |  ____iinniitt____(self, handler, *, request_factory=None, loop=None, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ccoonnnneeccttiioonn__lloosstt(self, handler, exc=None)
     |  
     |  ccoonnnneeccttiioonn__mmaaddee(self, handler, transport)
     |  
     |  sshhuuttddoowwnn(self, timeout=None)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ccoonnnneeccttiioonnss
    
    class SSttaattiiccRReessoouurrccee(PrefixResource)
     |  Method resolution order:
     |      StaticResource
     |      PrefixResource
     |      AbstractResource
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, prefix, directory, *, name=None, expect_handler=None, chunk_size=262144, show_index=False, follow_symlinks=False, append_version=False)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  rreessoollvvee(self, request)
     |      Resolve resource
     |      
     |      Return (UrlMappingMatchInfo, allowed_methods) pair.
     |  
     |  sseett__ooppttiioonnss__rroouuttee(self, handler)
     |  
     |  uurrll(self, *, filename, append_version=None, query=None)
     |      Construct url for resource with additional params.
     |      
     |      Deprecated, use url_for() instead.
     |  
     |  uurrll__ffoorr(self, *, filename, append_version=None)
     |      Construct url for resource with additional params.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  VVEERRSSIIOONN__KKEEYY = 'v'
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from PrefixResource:
     |  
     |  aadddd__pprreeffiixx(self, prefix)
     |      Add a prefix to processed URLs.
     |      
     |      Required for subapplications support.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AbstractResource:
     |  
     |  ffrreeeezzee(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AbstractResource:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  nnaammee
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
    
    class SSttrreeaammRReessppoonnssee(aiohttp.helpers.HeadersMixin)
     |  Method resolution order:
     |      StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, *, status=200, reason=None, headers=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  pprreeppaarree(self, request)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  wwrriittee(self, data)
     |  
     |  wwrriittee__eeooff(self, data=b'')
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class UUrrllDDiissppaattcchheerr(aiohttp.abc.AbstractRouter, collections.abc.Mapping)
     |  Helper class that provides a standard way to create an ABC using
     |  inheritance.
     |  
     |  Method resolution order:
     |      UrlDispatcher
     |      aiohttp.abc.AbstractRouter
     |      abc.ABC
     |      collections.abc.Mapping
     |      collections.abc.Sized
     |      collections.abc.Iterable
     |      collections.abc.Container
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____ccoonnttaaiinnss____(self, name)
     |  
     |  ____ggeettiitteemm____(self, name)
     |  
     |  ____iinniitt____(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____iitteerr____(self)
     |  
     |  ____lleenn____(self)
     |  
     |  aadddd__ddeelleettee(self, path, handler, **kwargs)
     |      Shortcut for add_route with method DELETE
     |  
     |  aadddd__ggeett(self, path, handler, *, name=None, allow_head=True, **kwargs)
     |      Shortcut for add_route with method GET, if allow_head is true another
     |      route is added allowing head requests to the same endpoint
     |  
     |  aadddd__hheeaadd(self, path, handler, **kwargs)
     |      Shortcut for add_route with method HEAD
     |  
     |  aadddd__ppaattcchh(self, path, handler, **kwargs)
     |      Shortcut for add_route with method PATCH
     |  
     |  aadddd__ppoosstt(self, path, handler, **kwargs)
     |      Shortcut for add_route with method POST
     |  
     |  aadddd__ppuutt(self, path, handler, **kwargs)
     |      Shortcut for add_route with method PUT
     |  
     |  aadddd__rreessoouurrccee(self, path, *, name=None)
     |  
     |  aadddd__rroouuttee(self, method, path, handler, *, name=None, expect_handler=None)
     |  
     |  aadddd__rroouutteess(self, routes)
     |      Append routes to route table.
     |      
     |      Parameter should be a sequence of RouteDef objects.
     |  
     |  aadddd__ssttaattiicc(self, prefix, path, *, name=None, expect_handler=None, chunk_size=262144, show_index=False, follow_symlinks=False, append_version=False)
     |      Add static files view.
     |      
     |      prefix - url prefix
     |      path - folder with files
     |  
     |  ffrreeeezzee(self)
     |      Freeze router.
     |  
     |  nnaammeedd__rreessoouurrcceess(self)
     |  
     |  rreeggiisstteerr__rreessoouurrccee(self, resource)
     |  
     |  rreessoollvvee(self, request)
     |      Return MATCH_INFO for given request
     |  
     |  rreessoouurrcceess(self)
     |  
     |  rroouutteess(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  NNAAMMEE__SSPPLLIITT__RREE = re.compile('[.:-]')
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.abc.AbstractRouter:
     |  
     |  ppoosstt__iinniitt(self, app)
     |      Post init stage.
     |      
     |      Not an abstract method for sake of backward compatibility,
     |      but if the router wants to be aware of the application
     |      it can override this.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.abc.AbstractRouter:
     |  
     |  ffrroozzeenn
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from abc.ABC:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from collections.abc.Mapping:
     |  
     |  ____eeqq____(self, other)
     |      Return self==value.
     |  
     |  ggeett(self, key, default=None)
     |      D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
     |  
     |  iitteemmss(self)
     |      D.items() -> a set-like object providing a view on D's items
     |  
     |  kkeeyyss(self)
     |      D.keys() -> a set-like object providing a view on D's keys
     |  
     |  vvaalluueess(self)
     |      D.values() -> an object providing a view on D's values
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from collections.abc.Mapping:
     |  
     |  ____hhaasshh____ = None
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from collections.abc.Sized:
     |  
     |  ____ssuubbccllaasssshhooookk____(C) from abc.ABCMeta
     |      Abstract classes can override this to customize issubclass().
     |      
     |      This is invoked early on by abc.ABCMeta.__subclasscheck__().
     |      It should return True, False or NotImplemented.  If it returns
     |      NotImplemented, the normal algorithm is used.  Otherwise, it
     |      overrides the normal algorithm (and the outcome is cached).
    
    class UUrrllMMaappppiinnggMMaattcchhIInnffoo(builtins.dict, aiohttp.abc.AbstractMatchInfo)
     |  dict() -> new empty dictionary
     |  dict(mapping) -> new dictionary initialized from a mapping object's
     |      (key, value) pairs
     |  dict(iterable) -> new dictionary initialized as if via:
     |      d = {}
     |      for k, v in iterable:
     |          d[k] = v
     |  dict(**kwargs) -> new dictionary initialized with the name=value pairs
     |      in the keyword argument list.  For example:  dict(one=1, two=2)
     |  
     |  Method resolution order:
     |      UrlMappingMatchInfo
     |      builtins.dict
     |      aiohttp.abc.AbstractMatchInfo
     |      abc.ABC
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____iinniitt____(self, match_dict, route)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  aadddd__aapppp(self, app)
     |      Add application to the nested apps stack.
     |  
     |  ffrreeeezzee(self)
     |      Freeze the match info.
     |      
     |      The method is called after route resolution.
     |      
     |      After the call .add_app() is forbidden.
     |  
     |  ggeett__iinnffoo(self)
     |      Return a dict with additional info useful for introspection
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
     |  
     |  aappppss
     |      Stack of nested applications.
     |      
     |      Top level application is left-most element.
     |  
     |  eexxppeecctt__hhaannddlleerr
     |      Expect handler for 100-continue processing
     |  
     |  hhaannddlleerr
     |      Execute matched request handler
     |  
     |  hhttttpp__eexxcceeppttiioonn
     |      HTTPException instance raised on router's resolving, or None
     |  
     |  rroouuttee
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.dict:
     |  
     |  ____ccoonnttaaiinnss____(self, key, /)
     |      True if D has a key k, else False.
     |  
     |  ____ddeelliitteemm____(self, key, /)
     |      Delete self[key].
     |  
     |  ____eeqq____(self, value, /)
     |      Return self==value.
     |  
     |  ____ggee____(self, value, /)
     |      Return self>=value.
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____ggeettiitteemm____(...)
     |      x.__getitem__(y) <==> x[y]
     |  
     |  ____ggtt____(self, value, /)
     |      Return self>value.
     |  
     |  ____iitteerr____(self, /)
     |      Implement iter(self).
     |  
     |  ____llee____(self, value, /)
     |      Return self<=value.
     |  
     |  ____lleenn____(self, /)
     |      Return len(self).
     |  
     |  ____lltt____(self, value, /)
     |      Return self<value.
     |  
     |  ____nnee____(self, value, /)
     |      Return self!=value.
     |  
     |  ____nneeww____(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ____sseettiitteemm____(self, key, value, /)
     |      Set self[key] to value.
     |  
     |  ____ssiizzeeooff____(...)
     |      D.__sizeof__() -> size of D in memory, in bytes
     |  
     |  cclleeaarr(...)
     |      D.clear() -> None.  Remove all items from D.
     |  
     |  ccooppyy(...)
     |      D.copy() -> a shallow copy of D
     |  
     |  ffrroommkkeeyyss(iterable, value=None, /) from abc.ABCMeta
     |      Returns a new dict with keys from iterable and values equal to value.
     |  
     |  ggeett(...)
     |      D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
     |  
     |  iitteemmss(...)
     |      D.items() -> a set-like object providing a view on D's items
     |  
     |  kkeeyyss(...)
     |      D.keys() -> a set-like object providing a view on D's keys
     |  
     |  ppoopp(...)
     |      D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
     |      If key is not found, d is returned if given, otherwise KeyError is raised
     |  
     |  ppooppiitteemm(...)
     |      D.popitem() -> (k, v), remove and return some (key, value) pair as a
     |      2-tuple; but raise KeyError if D is empty.
     |  
     |  sseettddeeffaauulltt(...)
     |      D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
     |  
     |  uuppddaattee(...)
     |      D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
     |      If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
     |      If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
     |      In either case, this is followed by: for k in F:  D[k] = F[k]
     |  
     |  vvaalluueess(...)
     |      D.values() -> an object providing a view on D's values
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from builtins.dict:
     |  
     |  ____hhaasshh____ = None
    
    class VViieeww(aiohttp.abc.AbstractView)
     |  Helper class that provides a standard way to create an ABC using
     |  inheritance.
     |  
     |  Method resolution order:
     |      View
     |      aiohttp.abc.AbstractView
     |      abc.ABC
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____aawwaaiitt____(self)
     |  
     |  ____iitteerr____(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset()
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.abc.AbstractView:
     |  
     |  ____iinniitt____(self, request)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.abc.AbstractView:
     |  
     |  rreeqquueesstt
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from abc.ABC:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)
    
    class WWSSMMssggTTyyppee(enum.IntEnum)
     |  An enumeration.
     |  
     |  Method resolution order:
     |      WSMsgType
     |      enum.IntEnum
     |      builtins.int
     |      enum.Enum
     |      builtins.object
     |  
     |  Data and other attributes defined here:
     |  
     |  BBIINNAARRYY = <WSMsgType.BINARY: 2>
     |  
     |  CCLLOOSSEE = <WSMsgType.CLOSE: 8>
     |  
     |  CCLLOOSSEEDD = <WSMsgType.CLOSED: 257>
     |  
     |  CCLLOOSSIINNGG = <WSMsgType.CLOSING: 256>
     |  
     |  CCOONNTTIINNUUAATTIIOONN = <WSMsgType.CONTINUATION: 0>
     |  
     |  EERRRROORR = <WSMsgType.ERROR: 258>
     |  
     |  PPIINNGG = <WSMsgType.PING: 9>
     |  
     |  PPOONNGG = <WSMsgType.PONG: 10>
     |  
     |  TTEEXXTT = <WSMsgType.TEXT: 1>
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from enum.Enum:
     |  
     |  nnaammee
     |      The name of the Enum member.
     |  
     |  vvaalluuee
     |      The value of the Enum member.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from enum.EnumMeta:
     |  
     |  ____mmeemmbbeerrss____
     |      Returns a mapping of member name->value.
     |      
     |      This mapping lists all enum members, including aliases. Note that this
     |      is a read-only view of the internal mapping.
    
    class WWeebbSSoocckkeettRReeaaddyy(WebSocketReady)
     |  WebSocketReady(ok, protocol)
     |  
     |  Method resolution order:
     |      WebSocketReady
     |      WebSocketReady
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____bbooooll____(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from WebSocketReady:
     |  
     |  ____ggeettnneewwaarrggss____(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  ____rreepprr____(self)
     |      Return a nicely formatted representation string
     |  
     |  __aassddiicctt(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  __rreeppllaaccee(_self, **kwds)
     |      Return a new WebSocketReady object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods inherited from WebSocketReady:
     |  
     |  __mmaakkee(iterable, new=<built-in method __new__ of type object at 0x882580>, len=<built-in function len>) from builtins.type
     |      Make a new WebSocketReady object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from WebSocketReady:
     |  
     |  ____nneeww____(_cls, ok, protocol)
     |      Create new instance of WebSocketReady(ok, protocol)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from WebSocketReady:
     |  
     |  ookk
     |      Alias for field number 0
     |  
     |  pprroottooccooll
     |      Alias for field number 1
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from WebSocketReady:
     |  
     |  __ffiieellddss = ('ok', 'protocol')
     |  
     |  __ssoouurrccee = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  ____aadddd____(self, value, /)
     |      Return self+value.
     |  
     |  ____ccoonnttaaiinnss____(self, key, /)
     |      Return key in self.
     |  
     |  ____eeqq____(self, value, /)
     |      Return self==value.
     |  
     |  ____ggee____(self, value, /)
     |      Return self>=value.
     |  
     |  ____ggeettaattttrriibbuuttee____(self, name, /)
     |      Return getattr(self, name).
     |  
     |  ____ggeettiitteemm____(self, key, /)
     |      Return self[key].
     |  
     |  ____ggtt____(self, value, /)
     |      Return self>value.
     |  
     |  ____hhaasshh____(self, /)
     |      Return hash(self).
     |  
     |  ____iitteerr____(self, /)
     |      Implement iter(self).
     |  
     |  ____llee____(self, value, /)
     |      Return self<=value.
     |  
     |  ____lleenn____(self, /)
     |      Return len(self).
     |  
     |  ____lltt____(self, value, /)
     |      Return self<value.
     |  
     |  ____mmuull____(self, value, /)
     |      Return self*value.n
     |  
     |  ____nnee____(self, value, /)
     |      Return self!=value.
     |  
     |  ____rrmmuull____(self, value, /)
     |      Return self*value.
     |  
     |  ccoouunntt(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  iinnddeexx(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class WWeebbSSoocckkeettRReessppoonnssee(aiohttp.web_response.StreamResponse)
     |  Method resolution order:
     |      WebSocketResponse
     |      aiohttp.web_response.StreamResponse
     |      aiohttp.helpers.HeadersMixin
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ____aaiitteerr____(self)
     |  
     |  ____aanneexxtt____(self)
     |  
     |  ____iinniitt____(self, *, timeout=10.0, receive_timeout=None, autoclose=True, autoping=True, heartbeat=None, protocols=(), compress=True)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ccaann__pprreeppaarree(self, request)
     |  
     |  cclloossee(self, *, code=1000, message=b'')
     |  
     |  eexxcceeppttiioonn(self)
     |  
     |  ppiinngg(self, message='b')
     |  
     |  ppoonngg(self, message='b')
     |  
     |  pprreeppaarree(self, request)
     |  
     |  rreecceeiivvee(self, timeout=None)
     |  
     |  rreecceeiivvee__bbyytteess(self, *, timeout=None)
     |  
     |  rreecceeiivvee__jjssoonn(self, *, loads=<function loads at 0x7fb07aa47048>, timeout=None)
     |  
     |  rreecceeiivvee__ssttrr(self, *, timeout=None)
     |  
     |  sseenndd__bbyytteess(self, data)
     |  
     |  sseenndd__jjssoonn(self, data, *, dumps=<function dumps at 0x7fb07aa38ea0>)
     |  
     |  sseenndd__ssttrr(self, data)
     |  
     |  wwrriittee(self, data)
     |  
     |  wwrriittee__eeooff(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  cclloossee__ccooddee
     |  
     |  cclloosseedd
     |  
     |  ccoommpprreessss
     |  
     |  wwss__pprroottooccooll
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from aiohttp.web_response.StreamResponse:
     |  
     |  ____rreepprr____(self)
     |      Return repr(self).
     |  
     |  ddeell__ccooookkiiee(self, name, *, domain=None, path='/')
     |      Delete cookie.
     |      
     |      Creates new empty expired cookie.
     |  
     |  ddrraaiinn(self)
     |  
     |  eennaabbllee__cchhuunnkkeedd__eennccooddiinngg(self, chunk_size=None)
     |      Enables automatic chunked transfer encoding.
     |  
     |  eennaabbllee__ccoommpprreessssiioonn(self, force=None)
     |      Enables response compression encoding.
     |  
     |  ffoorrccee__cclloossee(self)
     |  
     |  sseett__ccooookkiiee(self, name, value, *, expires=None, domain=None, max_age=None, path='/', secure=None, httponly=None, version=None)
     |      Set or update response cookie.
     |      
     |      Sets new cookie or updates existent with new value.
     |      Also updates only those params which are not None.
     |  
     |  sseett__ssttaattuuss(self, status, reason=None, _RESPONSES={<HTTPStatus.PRECONDITION_REQUIRED: 428>: ('Precondition Required', 'The origin server requires the request to be conditional'), <HTTPStatus.TOO_MANY_REQUESTS: 429>: ('Too Many Requests', 'The user has sent too many requests in a given amount of time ("rate limiting")'), <HTTPStatus.BAD_REQUEST: 400>: ('Bad Request', 'Bad request syntax or unsupported method'), <HTTPStatus.UNAUTHORIZED: 401>: ('Unauthorized', 'No permission -- see authorization schemes'), <HTTPStatus.PAYMENT_REQUIRED: 402>: ('Payment Required', 'No payment -- see charging schemes'), <HTTPStatus.FORBIDDEN: 403>: ('Forbidden', 'Request forbidden -- authorization will not help'), <HTTPStatus.NOT_FOUND: 404>: ('Not Found', 'Nothing matches the given URI'), <HTTPStatus.METHOD_NOT_ALLOWED: 405>: ('Method Not Allowed', 'Specified method is invalid for this resource'), <HTTPStatus.NOT_ACCEPTABLE: 406>: ('Not Acceptable', 'URI not available in preferred format'), <HTTPStatus.PROXY_AUTHENTICATION_REQUIRED: 407>: ('Proxy Authentication Required', 'You must authenticate with this proxy before proceeding'), <HTTPStatus.REQUEST_TIMEOUT: 408>: ('Request Timeout', 'Request timed out; try again later'), <HTTPStatus.CONFLICT: 409>: ('Conflict', 'Request conflict'), <HTTPStatus.GONE: 410>: ('Gone', 'URI no longer exists and has been permanently removed'), <HTTPStatus.LENGTH_REQUIRED: 411>: ('Length Required', 'Client must specify Content-Length'), <HTTPStatus.PRECONDITION_FAILED: 412>: ('Precondition Failed', 'Precondition in headers is false'), <HTTPStatus.REQUEST_ENTITY_TOO_LARGE: 413>: ('Request Entity Too Large', 'Entity is too large'), <HTTPStatus.REQUEST_URI_TOO_LONG: 414>: ('Request-URI Too Long', 'URI is too long'), <HTTPStatus.UNSUPPORTED_MEDIA_TYPE: 415>: ('Unsupported Media Type', 'Entity body in unsupported format'), <HTTPStatus.REQUESTED_RANGE_NOT_SATISFIABLE: 416>: ('Requested Range Not Satisfiable', 'Cannot satisfy request range'), <HTTPStatus.EXPECTATION_FAILED: 417>: ('Expectation Failed', 'Expect condition could not be satisfied'), <HTTPStatus.UNPROCESSABLE_ENTITY: 422>: ('Unprocessable Entity', ''), <HTTPStatus.LOCKED: 423>: ('Locked', ''), <HTTPStatus.FAILED_DEPENDENCY: 424>: ('Failed Dependency', ''), <HTTPStatus.UPGRADE_REQUIRED: 426>: ('Upgrade Required', ''), <HTTPStatus.MULTIPLE_CHOICES: 300>: ('Multiple Choices', 'Object has several resources -- see URI list'), <HTTPStatus.MOVED_PERMANENTLY: 301>: ('Moved Permanently', 'Object moved permanently -- see URI list'), <HTTPStatus.FOUND: 302>: ('Found', 'Object moved temporarily -- see URI list'), <HTTPStatus.SEE_OTHER: 303>: ('See Other', 'Object moved -- see Method and URL list'), <HTTPStatus.NOT_MODIFIED: 304>: ('Not Modified', 'Document has not changed since given time'), <HTTPStatus.USE_PROXY: 305>: ('Use Proxy', 'You must use proxy specified in Location to access this resource'), <HTTPStatus.TEMPORARY_REDIRECT: 307>: ('Temporary Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.PERMANENT_REDIRECT: 308>: ('Permanent Redirect', 'Object moved temporarily -- see URI list'), <HTTPStatus.OK: 200>: ('OK', 'Request fulfilled, document follows'), <HTTPStatus.CREATED: 201>: ('Created', 'Document created, URL follows'), <HTTPStatus.ACCEPTED: 202>: ('Accepted', 'Request accepted, processing continues off-line'), <HTTPStatus.NON_AUTHORITATIVE_INFORMATION: 203>: ('Non-Authoritative Information', 'Request fulfilled from cache'), <HTTPStatus.NO_CONTENT: 204>: ('No Content', 'Request fulfilled, nothing follows'), <HTTPStatus.RESET_CONTENT: 205>: ('Reset Content', 'Clear input form for further input'), <HTTPStatus.PARTIAL_CONTENT: 206>: ('Partial Content', 'Partial content follows'), <HTTPStatus.MULTI_STATUS: 207>: ('Multi-Status', ''), <HTTPStatus.ALREADY_REPORTED: 208>: ('Already Reported', ''), <HTTPStatus.IM_USED: 226>: ('IM Used', ''), <HTTPStatus.CONTINUE: 100>: ('Continue', 'Request received, please continue'), <HTTPStatus.SWITCHING_PROTOCOLS: 101>: ('Switching Protocols', 'Switching to new protocol; obey Upgrade header'), <HTTPStatus.PROCESSING: 102>: ('Processing', ''), <HTTPStatus.REQUEST_HEADER_FIELDS_TOO_LARGE: 431>: ('Request Header Fields Too Large', 'The server is unwilling to process the request because its header fields are too large'), <HTTPStatus.INTERNAL_SERVER_ERROR: 500>: ('Internal Server Error', 'Server got itself in trouble'), <HTTPStatus.NOT_IMPLEMENTED: 501>: ('Not Implemented', 'Server does not support this operation'), <HTTPStatus.BAD_GATEWAY: 502>: ('Bad Gateway', 'Invalid responses from another server/proxy'), <HTTPStatus.SERVICE_UNAVAILABLE: 503>: ('Service Unavailable', 'The server cannot process the request due to a high load'), <HTTPStatus.GATEWAY_TIMEOUT: 504>: ('Gateway Timeout', 'The gateway server did not receive a timely response'), <HTTPStatus.HTTP_VERSION_NOT_SUPPORTED: 505>: ('HTTP Version Not Supported', 'Cannot fulfill request'), <HTTPStatus.VARIANT_ALSO_NEGOTIATES: 506>: ('Variant Also Negotiates', ''), <HTTPStatus.INSUFFICIENT_STORAGE: 507>: ('Insufficient Storage', ''), <HTTPStatus.LOOP_DETECTED: 508>: ('Loop Detected', ''), <HTTPStatus.NOT_EXTENDED: 510>: ('Not Extended', ''), <HTTPStatus.NETWORK_AUTHENTICATION_REQUIRED: 511>: ('Network Authentication Required', 'The client needs to authenticate to gain network access')})
     |  
     |  sseett__ttccpp__ccoorrkk(self, value)
     |  
     |  sseett__ttccpp__nnooddeellaayy(self, value)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.web_response.StreamResponse:
     |  
     |  bbooddyy__lleennggtthh
     |  
     |  cchhaarrsseett
     |      The value of charset part for Content-Type HTTP header.
     |  
     |  cchhuunnkkeedd
     |  
     |  ccoommpprreessssiioonn
     |  
     |  ccoonntteenntt__lleennggtthh
     |      The value of Content-Length HTTP header.
     |  
     |  ccoonntteenntt__ttyyppee
     |      The value of content part for Content-Type HTTP header.
     |  
     |  ccooookkiieess
     |  
     |  hheeaaddeerrss
     |  
     |  kkeeeepp__aalliivvee
     |  
     |  llaasstt__mmooddiiffiieedd
     |      The value of Last-Modified HTTP header, or None.
     |      
     |      This header is represented as a `datetime` object.
     |  
     |  oouuttppuutt__lleennggtthh
     |  
     |  pprreeppaarreedd
     |  
     |  rreeaassoonn
     |  
     |  ssttaattuuss
     |  
     |  ttaasskk
     |  
     |  ttccpp__ccoorrkk
     |  
     |  ttccpp__nnooddeellaayy
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from aiohttp.helpers.HeadersMixin:
     |  
     |  ____ddiicctt____
     |      dictionary for instance variables (if defined)
     |  
     |  ____wweeaakkrreeff____
     |      list of weak references to the object (if defined)

FFUUNNCCTTIIOONNSS
    ddeelleettee(path, handler, **kwargs)
    
    ggeett(path, handler, *, name=None, allow_head=True, **kwargs)
    
    hheeaadd(path, handler, **kwargs)
    
    jjssoonn__rreessppoonnssee(data=<object object at 0x7fb0869a3320>, *, text=None, body=None, status=200, reason=None, headers=None, content_type='application/json', dumps=<function dumps at 0x7fb07aa38ea0>)
    
    mmiiddddlleewwaarree(f)
    
    nnoorrmmaalliizzee__ppaatthh__mmiiddddlleewwaarree(*, append_slash=True, merge_slashes=True, redirect_class=<class 'aiohttp.web_exceptions.HTTPMovedPermanently'>)
        Middleware that normalizes the path of a request. By normalizing
        it means:
        
            - Add a trailing slash to the path.
            - Double slashes are replaced by one.
        
        The middleware returns as soon as it finds a path that resolves
        correctly. The order if all enable is 1) merge_slashes, 2) append_slash
        and 3) both merge_slashes and append_slash. If the path resolves with
        at least one of those conditions, it will redirect to the new path.
        
        If append_slash is True append slash when needed. If a resource is
        defined with trailing slash and the request comes without it, it will
        append it automatically.
        
        If merge_slashes is True, merge multiple consecutive slashes in the
        path into one.
    
    ppaattcchh(path, handler, **kwargs)
    
    ppoosstt(path, handler, **kwargs)
    
    ppuutt(path, handler, **kwargs)
    
    rroouuttee(method, path, handler, **kwargs)

DDAATTAA
    ____aallll____ = ('RequestHandler', 'RequestPayloadError', 'FileResponse', 'B...

FFIILLEE
    /usr/local/python3/lib/python3.5/site-packages/aiohttp/web.py

